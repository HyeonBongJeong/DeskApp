<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- websocket handler -->
	<beans:bean id="replyEchochoHandler"
		class="com.kh.wefer.socket.ReplyEchoHandler" />

	<websocket:handlers>
		<websocket:mapping handler="replyEchochoHandler"
			path="/replyEcho" />
				<!-- 로그인한 사용자의 id를 세션으로 올려줌 -->
		<websocket:handshake-interceptors>
			<beans:bean
				class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>
 
<!--     <beans:bean id="echoHandler" class="com.kh.wefer.socket.ReplyEchoHandler" />
    <beans:bean id="chatHandler" class="com.kh.wefer.socket.ReplyEchoHandler" />
 	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/wecho.do" />
		<websocket:mapping handler="chatHandler" path="/chat-ws" />
		<websocket:handshake-interceptors>
		  <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>	
		<websocket:sockjs />
	</websocket:handlers> --> 
	<!-- DBCP 연결 id = "내가 짓는 이름" class = "" -->
	<beans:bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@wefer.cm4jjif1kavs.ap-northeast-2.rds.amazonaws.com:1521:orcl" />
		<beans:property name="username" value="wefer" />
		<beans:property name="password" value="wefer1234" />
	</beans:bean>

	<!-- 마이바티스 -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" /> <!-- name 은 factorybean클래스의 datasource 라는 변수이고 ref 는 위에 datasource의 아이디임 -->
		<beans:property name="configLocation"
			value="classpath:mybatis-config.xml" /><!-- "classpath:mybatis-config.xml로 
			패쓰지정 -->
	</beans:bean>

	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0"
			ref="sqlSessionFactory" />
	</beans:bean>

	<!-- TransactionManager를 정의하여 Commit, Rollback을 제어한다 -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<!-- Transaction 의 대상 설정 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<!-- Transaction의 대상이 되는 메소드를 정의한다 -->
			<tx:method name="select*" read-only="true"
				rollback-for="Exception" />
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="delete*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<!-- <tx:annotation-driven/> -->

	<!-- AOP를 통해 Transaction의 pointcut 설정 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="daoMethod"
			expression="execution(* com.kh.oshc..*Impl.*(..)))" />
		<aop:advisor id="transactionAdvisor"
			pointcut-ref="daoMethod" advice-ref="txAdvice" />
	</aop:config>

	<task:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.kh.wefer" />



</beans:beans>
